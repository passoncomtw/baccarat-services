{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "paths": {
        "/api/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get an user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apiv1.UserResponseDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTP404Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update an user name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User Request Body",
                        "name": "registe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.UpdateUserRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apiv1.UserResponseDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTP404Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth": {
            "post": {
                "description": "get auth token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "auth",
                "parameters": [
                    {
                        "description": "Login Body",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AuthRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AuthResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPUnauthorizedError"
                        }
                    }
                }
            }
        },
        "/home": {
            "get": {
                "description": "home",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "home",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resource": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "registe an user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User",
                "parameters": [
                    {
                        "description": "Registe Body",
                        "name": "registe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BaseUserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apiv1.UserResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTP404Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTP500Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AuthRequestDto": {
            "type": "object",
            "required": [
                "account",
                "password"
            ],
            "properties": {
                "account": {
                    "type": "string",
                    "example": "test001"
                },
                "password": {
                    "type": "string",
                    "example": "a12345678"
                }
            }
        },
        "api.AuthResponseDto": {
            "type": "object",
            "required": [
                "account",
                "token"
            ],
            "properties": {
                "account": {
                    "$ref": "#/definitions/api.UserResponseDto"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImFjY291bnQiOiJ0ZXN0MDAxIiwiYXVkIjoidGVzdDAwMSIsImV4cCI6MTcxMjA2NTEzMiwianRpIjoiMTcxMjA2MzEzMiIsImlhdCI6MTcxMjA2MzEzMiwiaXNzIjoiZ2luSldUIiwibmJmIjoxNzEyMDYzMTMzLCJzdWIiOiJ0ZXN0MDAxIn0.RnjzI0kGPu1klhoyjkvXXxlf8gI_7469qf52b9XBajM"
                }
            }
        },
        "api.UserResponseDto": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "account": {
                    "type": "string",
                    "example": "test001"
                },
                "amount": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2024-03-30 18:00:00"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "test001"
                }
            }
        },
        "apiv1.UpdateUserRequestDto": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "test001"
                }
            }
        },
        "apiv1.UserResponseDto": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/api.UserResponseDto"
                }
            }
        },
        "httputil.HTTP404Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "route not found"
                }
            }
        },
        "httputil.HTTP500Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "httputil.HTTPUnauthorizedError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "models.BaseUserDto": {
            "type": "object",
            "required": [
                "account",
                "amount",
                "name",
                "password"
            ],
            "properties": {
                "account": {
                    "type": "string",
                    "example": "test001"
                },
                "amount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "test001"
                },
                "password": {
                    "type": "string",
                    "example": "a12345678"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}